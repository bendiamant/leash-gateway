# Build stage
FROM golang:1.23-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Set working directory
WORKDIR /build

# Copy source code (including pre-generated protobuf files)
COPY . .

# Download dependencies and update go.sum
RUN go mod download && go mod tidy

# Build the binary
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o module-host cmd/module-host/main.go

# Final stage
FROM alpine:latest

# Install ca-certificates and grpc_health_probe
RUN apk --no-cache add ca-certificates curl && \
    wget -qO/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/v0.4.24/grpc_health_probe-linux-amd64 && \
    chmod +x /bin/grpc_health_probe

WORKDIR /root/

# Copy the binary from builder stage
COPY --from=builder /build/module-host .

# Create directories for logs and config
RUN mkdir -p /var/log/leash /etc/leash

# Expose ports
EXPOSE 50051 8081 9090

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD grpc_health_probe -addr=localhost:50051

# Run the binary
CMD ["./module-host"]
