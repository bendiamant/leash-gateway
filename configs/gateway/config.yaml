# Leash Gateway Configuration
server:
  port: 8080
  host: "0.0.0.0"
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "120s"
  max_header_bytes: 1048576  # 1MB

# Envoy proxy configuration
envoy:
  admin_port: 9901
  config_path: "/etc/envoy/bootstrap.yaml"
  stats_port: 9902
  log_level: "info"

# Module Host gRPC service
module_host:
  grpc_port: 50051
  health_port: 8081
  max_recv_msg_size: 4194304  # 4MB
  max_send_msg_size: 4194304  # 4MB
  keepalive:
    time: "30s"
    timeout: "5s"
    permit_without_stream: true

# Database configuration (for multi-tenancy)
database:
  driver: "postgres"  # postgres, mysql, sqlite
  url: "${DATABASE_URL:-postgres://leash:leash@localhost:5433/leash?sslmode=disable}"
  max_open_conns: 25
  max_idle_conns: 5
  conn_max_lifetime: "5m"
  migrations_path: "./migrations"

# Redis configuration (for caching and rate limiting)
redis:
  url: "${REDIS_URL:-redis://localhost:6380}"
  max_retries: 3
  retry_delay: "100ms"
  pool_size: 10
  min_idle_conns: 5

# Default tenant configuration
tenants:
  default:
    name: "default"
    description: "Default tenant for development"
    policies: ["rate-limiter", "logger"]
    quotas:
      requests_per_hour: 1000
      requests_per_day: 10000
      cost_limit_usd: 100.00
    rate_limits:
      - name: "api_requests"
        limit: 100
        window: "1m"

# Provider configurations
providers:
  openai:
    endpoint: "https://api.openai.com/v1"
    timeout: "30s"
    retry_attempts: 3
    retry_delay: "1s"
    retry_backoff_multiplier: 2.0
    max_retry_delay: "30s"
    circuit_breaker:
      failure_threshold: 5
      success_threshold: 3
      timeout: "60s"
    health_check:
      enabled: true
      interval: "30s"
      timeout: "5s"
      path: "/v1/models"
    headers:
      Authorization: "Bearer ${OPENAI_API_KEY:-sk-demo-key-replace-with-real}"
    models:
      - name: "gpt-4o-mini"
        cost_per_1k_input_tokens: 0.15
        cost_per_1k_output_tokens: 0.60
      - name: "gpt-4o"
        cost_per_1k_input_tokens: 5.00
        cost_per_1k_output_tokens: 15.00
  
  anthropic:
    endpoint: "https://api.anthropic.com/v1"
    timeout: "30s"
    retry_attempts: 3
    circuit_breaker:
      failure_threshold: 5
      success_threshold: 3
      timeout: "60s"
    headers:
      x-api-key: "${ANTHROPIC_API_KEY:-ant-demo-key-replace-with-real}"
      anthropic-version: "2023-06-01"
    models:
      - name: "claude-3-sonnet-20240229"
        cost_per_1k_input_tokens: 3.00
        cost_per_1k_output_tokens: 15.00
      - name: "claude-3-opus-20240229"
        cost_per_1k_input_tokens: 15.00
        cost_per_1k_output_tokens: 75.00

  google:
    endpoint: "https://generativelanguage.googleapis.com/v1"
    timeout: "30s"
    retry_attempts: 3
    circuit_breaker:
      failure_threshold: 5
      success_threshold: 3
      timeout: "60s"
    models:
      - name: "gemini-1.5-flash"
        cost_per_1k_input_tokens: 0.075
        cost_per_1k_output_tokens: 0.30
      - name: "gemini-1.5-pro"
        cost_per_1k_input_tokens: 3.50
        cost_per_1k_output_tokens: 10.50

# Module configurations
modules:
  rate-limiter:
    enabled: true
    type: "policy"
    priority: 100
    config:
      algorithm: "token_bucket"  # token_bucket, fixed_window, sliding_window
      default_limit: 1000
      default_window: "1h"
      storage: "memory"  # memory, redis
  
  content-filter:
    enabled: true
    type: "policy"
    priority: 300
    config:
      blocked_keywords:
        - "inappropriate"
        - "harmful"
        - "dangerous"
      severity_threshold: 0.8
      action: "block"  # block, warn, annotate, redact
      case_sensitive: false
      check_requests: true
      check_responses: true

  cost-tracker:
    enabled: true
    type: "sink"
    priority: 900
    config:
      storage: "memory"
      aggregation_window: "1h"
      track_requests: true
      track_responses: true
      alert_thresholds:
        - threshold: 100.00
          notification: "log"
          message: "Daily cost limit approaching"
        - threshold: 500.00
          notification: "log"
          message: "Daily cost limit exceeded"

  logger:
    enabled: true
    type: "sink"
    priority: 1000
    config:
      destinations:
        - type: "stdout"
          format: "json"
        - type: "file"
          path: "/var/log/leash/requests.log"
          format: "json"
          rotation:
            max_size: "100MB"
            max_files: 10

# Observability configuration
observability:
  metrics:
    enabled: true
    port: 9090
    path: "/metrics"
    collectors:
      - "go_runtime"
      - "process"
      - "gateway_custom"
    labels:
      service: "leash-gateway"
      version: "${VERSION:-dev}"
      environment: "${ENVIRONMENT:-development}"
  
  logging:
    level: "info"  # debug, info, warn, error
    format: "json"  # json, text
    output: "stdout"  # stdout, file, syslog
    add_source: true
    development: false
    
  tracing:
    enabled: false
    service_name: "leash-gateway"
    endpoint: "${JAEGER_ENDPOINT}"
    sampler:
      type: "probabilistic"  # const, probabilistic, rateLimiting
      param: 0.1
    
  profiling:
    enabled: false
    port: 6060

# Security configuration
security:
  api_keys:
    header_name: "X-API-Key"  # or Authorization
    prefix: "Bearer "  # if using Authorization header
    min_length: 32
    max_length: 128
  
  cors:
    enabled: true
    allowed_origins: ["*"]
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["*"]
    expose_headers: ["X-Request-ID"]
    max_age: 86400
  
  rate_limiting:
    global:
      enabled: true
      limit: 10000
      window: "1h"
    per_ip:
      enabled: true
      limit: 1000
      window: "1h"
  
  request_size_limits:
    max_body_size: "10MB"
    max_header_size: "1MB"

# Feature flags
feature_flags:
  enable_streaming: true
  enable_caching: false
  enable_request_signing: false
  enable_response_compression: true
  enable_request_deduplication: false

# Development/Debug settings
development:
  debug_mode: false
  mock_providers: false
  log_requests: true
  log_responses: false  # Be careful with PII
  enable_pprof: false
